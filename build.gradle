plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.9.6"}



repositories {
    mavenCentral()
}
compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}
def
        allureVersion= "2.17.2",
        junitVersion = "5.8.2"


allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        autoconfigure.set(true)
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation (
            'com.codeborne:selenide:6.2.0',
            'io.qameta.allure:allure-selenide:2.17.2',
            'com.github.javafaker:javafaker:0.12',
            'org.assertj:assertj-core:3.22.0',
            'com.codeborne:pdf-test:1.7.0',
            'com.codeborne:xls-test:1.5.0',
            'com.opencsv:opencsv:5.5.2',
            'org.junit.jupiter:junit-jupiter:5.8.2')
    testRuntimeOnly (
            "org.slf4j:slf4j-simple:1.7.32",
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())
//    systemProperty("browser", "safari")
//    systemProperty("environment", System.getProperty("environment", "stage") //preprod, prod, stage

    testLogging {
        lifecycle {
//            events "started", "failed"
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task properties_tests(type: Test) {
    useJUnitPlatform() {
        includeTags "properties"
    }
}

task simple_tests(type: Test) {
    useJUnitPlatform() {
        includeTags"simple"
    }
}
